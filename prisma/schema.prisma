generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    User[]
  invoices Invoice[]

  @@map("tenants")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String   @map("password_hash")
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  tenantId     String   @map("tenant_id")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  tenant   Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  invoices Invoice[]

  @@index([email])
  @@index([tenantId])
  @@map("users")
}

model Invoice {
  id              String   @id @default(cuid())
  invoiceNumber   String   @unique @map("invoice_number")
  clientName      String   @map("client_name")
  clientEmail     String   @map("client_email")
  clientAddress   String?  @db.Text @map("client_address")
  issueDate       DateTime @map("issue_date")
  dueDate         DateTime @map("due_date")
  subtotal        Decimal  @db.Decimal(10, 2)
  tax             Decimal  @db.Decimal(10, 2)
  total           Decimal  @db.Decimal(10, 2)
  shippingCharges Decimal  @db.Decimal(10, 2) @default(0) @map("shipping_charges")
  discountPercent Decimal  @db.Decimal(5, 2) @default(0) @map("discount_percent")
  notes           String?  @db.Text
  status          String   @default("draft")
  userId          String   @map("user_id")
  tenantId        String   @map("tenant_id")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user   User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  tenant Tenant          @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  items  InvoiceItem[]

  @@index([invoiceNumber])
  @@index([userId])
  @@index([tenantId])
  @@index([status])
  @@map("invoices")
}

model InvoiceItem {
  id           String  @id @default(cuid())
  invoiceId    String  @map("invoice_id")
  description  String
  quantity     Int
  unitPrice    Decimal @db.Decimal(10, 2) @map("unit_price")
  amount       Decimal @db.Decimal(10, 2)
  baseAmount   Decimal @db.Decimal(10, 2) @default(0) @map("base_amount")
  totalAmount  Decimal @db.Decimal(10, 2) @default(0) @map("total_amount")
  gstPercent   Decimal @db.Decimal(5, 2) @default(0) @map("gst_percent")
  sgstPercent  Decimal @db.Decimal(5, 2) @default(0) @map("sgst_percent")
  cgstPercent  Decimal @db.Decimal(5, 2) @default(0) @map("cgst_percent")

  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@index([invoiceId])
  @@map("invoice_items")
}
